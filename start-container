#!/usr/bin/env bash

# Set runtime environment variables
export WWWUSER="${WWWUSER:-sail}"
export WWWGROUP="${WWWGROUP:-sail}"
export PUID="${PUID:-1000}"
export PGID="${PGID:-1000}"
export APP_PORT="${APP_PORT:-36400}" # default 36400
export REVERB_PORT="${REVERB_PORT:-36800}"
export SUPERVISOR_PHP_USER="${SUPERVISOR_PHP_USER:-root}"
export TZ="${TZ:-UTC}"  # Set timezone, default to UTC

# App URL:
export APP_URL="${APP_URL:-http://localhost}"

# Define the php-fpm command
export SUPERVISOR_PHP_COMMAND="${SUPERVISOR_PHP_COMMAND:-/usr/sbin/php-fpm84 -F}"

# The queue and websockets
export QUEUE_PHP_COMMAND="${QUEUE_PHP_COMMAND:-/usr/bin/php /var/www/html/artisan horizon}"
export WEBSOCKET_PHP_COMMAND="${WEBSOCKET_PHP_COMMAND:-/usr/bin/php /var/www/html/artisan reverb:start --host=0.0.0.0 --port=$REVERB_PORT --no-interaction --no-ansi}"

# Update port in nginx config
if [ -f /etc/nginx/nginx.tmpl ]; then
    envsubst '${WWWUSER}' < /etc/nginx/nginx.tmpl > /etc/nginx/nginx.conf
fi
if [ -f /etc/nginx/conf.d/laravel.tmpl ]; then
    echo "‚ö°Ô∏è Running app at: $APP_URL:$APP_PORT"
    envsubst '${APP_PORT} ${APP_URL}' < /etc/nginx/conf.d/laravel.tmpl > /etc/nginx/conf.d/laravel.conf
fi

# Make sure correct user is set
if [ "$SUPERVISOR_PHP_USER" != "root" ] && [ "$SUPERVISOR_PHP_USER" != "sail" ]; then
    echo "You should set SUPERVISOR_PHP_USER to either 'sail' or 'root'."
    exit 1
fi

# Make sure the laravel project is installed
if [ ! -f "/var/www/html/artisan" ]; then
    echo "Laravel artisan not found! Make sure project is installed."
    exit 1
fi

# Git pull the latest changes (optional)
# echo "Pulling latest changes..."
# git config --global --add safe.directory /var/www/html
# git pull

# Check for configuration directories and files
config_dir="/var/www/config"
env_file="${config_dir}/env"
db_dir="${config_dir}/database"
db_file="${db_dir}/database.sqlite"
db_file_jobs="${db_dir}/jobs.sqlite"
epg_dir="${config_dir}/epg"
playlist_dir="${config_dir}/playlist"
backup_dir="${config_dir}/m3u-editor-backups"
log_dir="${config_dir}/logs"
queue_log_file="${log_dir}/queue.log"
websockets_log_file="${log_dir}/websocket.log"
laravel_log_file="${log_dir}/laravel.log"
nginx_log_file="${log_dir}/nginx.log"

swoole_log_file="${log_dir}/swoole_http.log"
reverb_log_file="${log_dir}/reverb.log"
horizon_log_file="${log_dir}/horizon.log"

# Setup timezone
if [ -f "/etc/localtime" ]; then
    rm /etc/localtime
fi
cp "/usr/share/zoneinfo/$TZ" /etc/localtime
echo "$TZ" > /etc/timezone
echo "üìÖ Timezone set to $TZ. Current date/time: $(date)"
echo ""

# Create config directories if needed
if [ ! -d "${config_dir}" ]; then
    echo "Missing config directory, please mount it to /var/www/config"
    exit 0
fi
[ ! -d "${db_dir}" ] && mkdir -p "${db_dir}"
[ ! -d "${epg_dir}" ] && mkdir -p "${epg_dir}"
[ ! -d "${playlist_dir}" ] && mkdir -p "${playlist_dir}"
[ ! -d "${backup_dir}" ] && mkdir -p "${backup_dir}"
[ ! -d "${log_dir}" ] && mkdir -p "${log_dir}"

# Create environment file if missing
if [ ! -f "${env_file}" ]; then
    echo "Missing environment file, creating now..."
    cp /var/www/html/.env.example "${env_file}"
fi

# Create database files if missing
[ ! -f "${db_file}" ] && touch "${db_file}"
[ ! -f "${db_file_jobs}" ] && touch "${db_file_jobs}"

# Create log files
[ ! -f "${queue_log_file}" ] && touch "${queue_log_file}"
[ ! -f "${websockets_log_file}" ] && touch "${websockets_log_file}"
[ ! -f "${nginx_log_file}" ] && touch "${nginx_log_file}"

# Cleanup
[ -f "${swoole_log_file}" ] && rm -f "${swoole_log_file}"
[ -f "${reverb_log_file}" ] && rm -f "${reverb_log_file}"
[ -f "${horizon_log_file}" ] && rm -f "${horizon_log_file}"
[ -f "${laravel_log_file}" ] && rm -f "${laravel_log_file}"

# Link environment file
ln -sf "${env_file}" .env

# Link db files
ln -sf "${db_file}" "database/database.sqlite"
ln -sf "${db_file_jobs}" "database/jobs.sqlite"

# Link logs
rm -rf storage/logs
ln -sf "${log_dir}" storage/

# Link EPG, Playlist, Backups
[ ! -d "storage/app/private/epg" ] && ln -sf "${epg_dir}" storage/app/private/epg
[ ! -d "storage/app/private/playlist" ] && ln -sf "${playlist_dir}" storage/app/private/playlist
[ ! -d "storage/app/private/m3u-editor-backups" ] && ln -sf "${backup_dir}" storage/app/private/m3u-editor-backups

# Link Laravel storage
if [ ! -d "public/storage" ]; then
    php artisan storage:link
fi

# Set app key if not set
php artisan app:generate-key

# Check for updates
php artisan app:update-check

# Optimize Laravel
php artisan optimize

# Set Sqlite WAL mode
echo "üóÇÔ∏è  Enabling SQLite WAL mode..."
php artisan sqlite:wal-enable sqlite
echo ""

# Run migrations
echo "üíæ Running migrations..."
php artisan migrate --force

# Build assets
echo "üõ†Ô∏è  Building assets..."
npm install && npm run build

# Ensure composer dir is writable
[ ! -d /.composer ] && mkdir /.composer
chmod -R ugo+rw /.composer


# Setup user, group and permissions
addgroup $PGID \
    && adduser -h /var/www/html -s /bin/bash -G $PGID -D $PUID

chown -R $PUID:$PGID /var/www/html

# If passed custom commands, execute them, else run supervisord
if [ $# -gt 0 ]; then
    if [ "$SUPERVISOR_PHP_USER" = "root" ]; then
        exec "$@"
    else
        exec gosu $PUID "$@"
    fi
else
    echo ""
    echo "üöÄ Starting services..."
    echo ""
    exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
fi